//mumax 3.10 [windows_amd64 go1.11.6(gc) CUDA-11.0]
//GPU info: GeForce MX150(2048MB), CUDA Driver 11.1, cc=6.1, using cc=61 PTX
//(c) Arne Vansteenkiste, Dynamat LAB, Ghent University, Belgium
//This is free software without any warranty. See license.txt
//********************************************************************//
//  If you use mumax in any work or publication,                      //
//  we kindly ask you to cite the references in references.bib        //
//********************************************************************//
//output directory: c:\Jonathan\UGent\Masterproef\inputfiles\two_islands\two_islands_energyBarrier_distance.out/
Nx := 128
Ny := 32
Nz := 1
cellSize := 2e-9
SetGridSize(Nx, Ny, Nz)
SetCellSize(cellSize, cellSize, 5e-9/Nz)
print("Simulation size:", cellSize*Nx, cellSize*Ny)
//Simulation size: 2.56e-07 6.4e-08
Ms := 800e3
Msat = Ms
Aex = 13e-12
print("Exchange length:", Sqrt((2*Aex.GetRegion(0))/(mu0*Pow(Msat.GetRegion(0), 2))))
//Exchange length: 5.685802385313737e-09
island1_magAngle := 0.0
island1_magAngle0 := island1_magAngle
island2_magAngle := 0.0
island2_magAngle0 := island2_magAngle
bias := 0.1
island_roundness := 0.49
island_size := 50e-9
islands_distance := 50e-9
islands_distance0 := islands_distance
islands_angle := 0
TableAdd(E_total)
TableAdd(E_zeeman)
TableAddVar(island1_magAngle, "island1_angle", "rad")
TableAddVar(island2_magAngle, "island2_angle", "rad")
TableAddVar(island_roundness, "roundness", "")
TableAddVar(island_size, "size", "m")
TableAddVar(islands_distance, "islands_distance", "m")
TableAddVar(islands_angle, "islands_angle", "rad")
TableAddVar(cellSize, "Cell_size", "m")
u1 := Vector(1, 0, 0)
u2 := Vector(1, 0, 0)
for islands_distance = islands_distance0; islands_distance <= 200e-9; islands_distance += cellSize {
	island1 := Ellipse(island_size, island_size*island_roundness)
	island1 = island1.Add(island1.RotZ(Pi / 2))
	island1 = island1.Transl(-cellSize*Nx/2+island_size/2, -cellSize*Ny/2+island_size/2, 0)
	island2 := island1.Transl(cos(islands_angle)*islands_distance, sin(islands_angle)*islands_distance, 0)
	DefRegion(1, island1)
	DefRegion(2, island2)
	geometry := island1.Add(island2)
	SetGeom(geometry)
	Save(Geom)
	for island1_magAngle = island1_magAngle0; island1_magAngle <= 2; island1_magAngle += Pi / 2 {
		u1 = Vector(cos(island1_magAngle), sin(island1_magAngle), 0)
		u2 = Vector(cos(island2_magAngle), sin(island2_magAngle), 0)
		m.setRegion(1, Uniform(1, 0, 0).rotZ(island1_magAngle))
		m.setRegion(2, Uniform(1, 0, 0).rotZ(island2_magAngle))
		B_ext.setRegion(1, u1.Mul(bias))
		B_ext.setRegion(2, u2.Mul(bias))
		minimize()
		TableSave()
	}
}
//********************************************************************//
//Please cite the following references, relevant for your simulation. //
//See bibtex file in output folder for justification.                 //
//********************************************************************//
//   * Vansteenkiste et al., AIP Adv. 4, 107133 (2014).
//   * Exl et al., J. Appl. Phys. 115, 17D118 (2014).
