//// Grid
Nxy := 256
Nz := 1
cellSize := 0.5e-9
thickness := 5e-9
SetGridSize(Nxy, Nxy, Nz)
SetCellSize(cellSize, cellSize, thickness/Nz)

//// Material parameters
Msat = 800e3
Aex = 13e-12
print("Exchange length:", Sqrt((2*Aex.GetRegion(0))/(mu0*Pow(Msat.GetRegion(0), 2)))) // 5.6858e-9 so ok to use Nz = 1 for 5e-9 thickness

//// Track E_total, angle, shape
TableAdd(E_total)
TableAdd(E_zeeman)
angle := 0.0
roundness := 1.0
size := 100 // [nm]
volume := 0.0 // [m³]
TableAddVar(angle, "Angle", "rad")
TableAddVar(roundness, "Roundness", "")
TableAddVar(size, "Size", "nm")
TableAddVar(cellSize, "Cell_size", "m")
TableAddVar(volume, "Volume", "m^3")
angle0 := angle
roundness0 := roundness
size0 := size

//// Loop total size and shape
for size=size0; size >= 100; size = size*0.5 {
    for roundness=roundness0; (roundness >= 0.1) && (roundness*size > 128/Nxy); roundness -= 0.001 {
        print(sprintf("Short axis: %.3f nm", roundness*size))
        print(sprintf("Long axis: %d nm", size))

        //// Shape
        geometry := Ellipse(size*1e-9, size*roundness*1e-9)
        geometry = geometry.Add(geometry.RotZ(Pi/2))
        SetGeom(geometry)
        volume = geom.average()*Pow(cellSize*Nxy, 2)*thickness
        print(sprintf("Volume: %.3e m³", volume))
        //SaveAs(geom, sprintf("geomPlus%d_%.2f", size, roundness))

        //// Sweep magnetization angle
        for angle=angle0; angle <= Pi/4; angle += Pi/4 {
            m = Uniform(cos(angle), sin(angle), 0)
            B_ext = vector(0.001*cos(angle), 0.001*sin(angle), 0)
            minimize()
            
            TableSave()
            //SaveAs(m, sprintf("mPlus_roundness%.2f_a%.2f.ovf", roundness, angle))
        }
    }
}