/*
    Calculates the energy landscape between two ellipse-plus-shaped islands, for all possible values of
    their magnetization angles.
*/
//// Grid
Nx := @{Nx}
Ny := @{Ny}
Nz := 1
cellSize := @{cellSize}
SetGridSize(Nx, Ny, Nz)
SetCellSize(cellSize, cellSize, 5e-9/Nz)
Lx := cellSize*Nx
Ly := cellSize*Ny
print("Simulation area:", Lx, "by", Ly)

//// Material parameters
Aex = 13e-12
print("Exchange length:", Sqrt((2*Aex.GetRegion(0))/(mu0*Pow(Msat.GetRegion(0), 2)))) // 5.6858e-9 so ok to use Nz = 1 for 5e-9 thickness

//// Island angles
// GEOM: For free islands: rotation of geometry (0.0 <= angle{n} < Pi/2), for fixed islands their direction (any value)
@{anglen}

// GEOM: Here 'a{n} := angle{n}' for all islands {n} which are NOT fixed
@{an}

//// Island geometries
// GEOM: Here island{n} := Ellipse().Add(Ellipse().RotZ()).RotZ(angle{n}).Transl(x,y,0)
@{islandn}
// GEOM: Here add all islands together
@{geometry}
SetGeom(geometry)

// GEOM: Here define region for all islands
@{DefRegion}
@{SetRegion}
Save(regions)

fixationField := 1
// GEOM: Here set external field for all FIXED islands with B_ext.setRegion({n}, Vector(cos(angle{n}), sin(angle{n}), 0).Mul(fixationField))
@{B_ext}
Save(B_ext)

//// Track E_total, angle, shape
// Use Quantity.Region(int) to get the quantity in one region
TableAdd(E_total) // Total energy
TableAdd(E_Zeeman) // Zeeman only takes into account B_ext, and thus the fixation of the fixed islands (to be subtracted from E_total)
// GEOM: Here print out a{n} for all islands which are NOT fixed (a{n} only exists for those)
@{TableAddan}
// GEOM: Here print out magnetization for all islands, including fixed ones
@{TableAddmRegions}

@{TableAddGlobals}
TableAddVar(cellSize, "Cell_size", "m")

//// Many nested loops
// GEOM: A loop for each island that is NOT fixed
@{loops}
    
    minimize()
    TableSave()
@{loops_closing_braces}